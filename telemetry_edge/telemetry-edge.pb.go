// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: telemetry-edge.proto

/*
 * Copyright 2020 Rackspace US, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package telemetry_edge

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AgentType int32

const (
	AgentType_TELEGRAF AgentType = 0
	AgentType_FILEBEAT AgentType = 1
	AgentType_ORACLE   AgentType = 2
	AgentType_PACKAGES AgentType = 3
)

// Enum value maps for AgentType.
var (
	AgentType_name = map[int32]string{
		0: "TELEGRAF",
		1: "FILEBEAT",
		2: "ORACLE",
		3: "PACKAGES",
	}
	AgentType_value = map[string]int32{
		"TELEGRAF": 0,
		"FILEBEAT": 1,
		"ORACLE":   2,
		"PACKAGES": 3,
	}
)

func (x AgentType) Enum() *AgentType {
	p := new(AgentType)
	*p = x
	return p
}

func (x AgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_telemetry_edge_proto_enumTypes[0].Descriptor()
}

func (AgentType) Type() protoreflect.EnumType {
	return &file_telemetry_edge_proto_enumTypes[0]
}

func (x AgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentType.Descriptor instead.
func (AgentType) EnumDescriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{0}
}

type Checksum_Type int32

const (
	Checksum_SHA256 Checksum_Type = 0
	Checksum_SHA512 Checksum_Type = 1
)

// Enum value maps for Checksum_Type.
var (
	Checksum_Type_name = map[int32]string{
		0: "SHA256",
		1: "SHA512",
	}
	Checksum_Type_value = map[string]int32{
		"SHA256": 0,
		"SHA512": 1,
	}
)

func (x Checksum_Type) Enum() *Checksum_Type {
	p := new(Checksum_Type)
	*p = x
	return p
}

func (x Checksum_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Checksum_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_telemetry_edge_proto_enumTypes[1].Descriptor()
}

func (Checksum_Type) Type() protoreflect.EnumType {
	return &file_telemetry_edge_proto_enumTypes[1]
}

func (x Checksum_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Checksum_Type.Descriptor instead.
func (Checksum_Type) EnumDescriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{6, 0}
}

type ConfigurationOp_Type int32

const (
	ConfigurationOp_CREATE ConfigurationOp_Type = 0
	ConfigurationOp_MODIFY ConfigurationOp_Type = 1
	ConfigurationOp_REMOVE ConfigurationOp_Type = 2
)

// Enum value maps for ConfigurationOp_Type.
var (
	ConfigurationOp_Type_name = map[int32]string{
		0: "CREATE",
		1: "MODIFY",
		2: "REMOVE",
	}
	ConfigurationOp_Type_value = map[string]int32{
		"CREATE": 0,
		"MODIFY": 1,
		"REMOVE": 2,
	}
)

func (x ConfigurationOp_Type) Enum() *ConfigurationOp_Type {
	p := new(ConfigurationOp_Type)
	*p = x
	return p
}

func (x ConfigurationOp_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigurationOp_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_telemetry_edge_proto_enumTypes[2].Descriptor()
}

func (ConfigurationOp_Type) Type() protoreflect.EnumType {
	return &file_telemetry_edge_proto_enumTypes[2]
}

func (x ConfigurationOp_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigurationOp_Type.Descriptor instead.
func (ConfigurationOp_Type) EnumDescriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{8, 0}
}

type EnvoySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         string            `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	SupportedAgents []AgentType       `protobuf:"varint,2,rep,packed,name=supportedAgents,proto3,enum=AgentType" json:"supportedAgents,omitempty"`
	Labels          map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResourceId      string            `protobuf:"bytes,4,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Zone            string            `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *EnvoySummary) Reset() {
	*x = EnvoySummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoySummary) ProtoMessage() {}

func (x *EnvoySummary) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoySummary.ProtoReflect.Descriptor instead.
func (*EnvoySummary) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{0}
}

func (x *EnvoySummary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EnvoySummary) GetSupportedAgents() []AgentType {
	if x != nil {
		return x.SupportedAgents
	}
	return nil
}

func (x *EnvoySummary) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *EnvoySummary) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *EnvoySummary) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AgentType `protobuf:"varint,1,opt,name=type,proto3,enum=AgentType" json:"type,omitempty"`
	Version string    `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{1}
}

func (x *Agent) GetType() AgentType {
	if x != nil {
		return x.Type
	}
	return AgentType_TELEGRAF
}

func (x *Agent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type EnvoyInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Details:
	//	*EnvoyInstruction_Install
	//	*EnvoyInstruction_Configure
	//	*EnvoyInstruction_Refresh
	//	*EnvoyInstruction_TestMonitor
	//	*EnvoyInstruction_Ready
	Details isEnvoyInstruction_Details `protobuf_oneof:"details"`
}

func (x *EnvoyInstruction) Reset() {
	*x = EnvoyInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstruction) ProtoMessage() {}

func (x *EnvoyInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstruction.ProtoReflect.Descriptor instead.
func (*EnvoyInstruction) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{2}
}

func (m *EnvoyInstruction) GetDetails() isEnvoyInstruction_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *EnvoyInstruction) GetInstall() *EnvoyInstructionInstall {
	if x, ok := x.GetDetails().(*EnvoyInstruction_Install); ok {
		return x.Install
	}
	return nil
}

func (x *EnvoyInstruction) GetConfigure() *EnvoyInstructionConfigure {
	if x, ok := x.GetDetails().(*EnvoyInstruction_Configure); ok {
		return x.Configure
	}
	return nil
}

func (x *EnvoyInstruction) GetRefresh() *EnvoyInstructionRefresh {
	if x, ok := x.GetDetails().(*EnvoyInstruction_Refresh); ok {
		return x.Refresh
	}
	return nil
}

func (x *EnvoyInstruction) GetTestMonitor() *EnvoyInstructionTestMonitor {
	if x, ok := x.GetDetails().(*EnvoyInstruction_TestMonitor); ok {
		return x.TestMonitor
	}
	return nil
}

func (x *EnvoyInstruction) GetReady() *EnvoyInstructionReady {
	if x, ok := x.GetDetails().(*EnvoyInstruction_Ready); ok {
		return x.Ready
	}
	return nil
}

type isEnvoyInstruction_Details interface {
	isEnvoyInstruction_Details()
}

type EnvoyInstruction_Install struct {
	Install *EnvoyInstructionInstall `protobuf:"bytes,1,opt,name=install,proto3,oneof"`
}

type EnvoyInstruction_Configure struct {
	Configure *EnvoyInstructionConfigure `protobuf:"bytes,2,opt,name=configure,proto3,oneof"`
}

type EnvoyInstruction_Refresh struct {
	Refresh *EnvoyInstructionRefresh `protobuf:"bytes,3,opt,name=refresh,proto3,oneof"`
}

type EnvoyInstruction_TestMonitor struct {
	TestMonitor *EnvoyInstructionTestMonitor `protobuf:"bytes,4,opt,name=testMonitor,proto3,oneof"`
}

type EnvoyInstruction_Ready struct {
	// ready is sent by the Ambassador when it is ready to process keepalives and metrics
	Ready *EnvoyInstructionReady `protobuf:"bytes,5,opt,name=ready,proto3,oneof"`
}

func (*EnvoyInstruction_Install) isEnvoyInstruction_Details() {}

func (*EnvoyInstruction_Configure) isEnvoyInstruction_Details() {}

func (*EnvoyInstruction_Refresh) isEnvoyInstruction_Details() {}

func (*EnvoyInstruction_TestMonitor) isEnvoyInstruction_Details() {}

func (*EnvoyInstruction_Ready) isEnvoyInstruction_Details() {}

// DetachedInstructions is used for offline, detached loading of instructions from a file.
type DetachedInstructions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instructions []*EnvoyInstruction `protobuf:"bytes,1,rep,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *DetachedInstructions) Reset() {
	*x = DetachedInstructions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachedInstructions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachedInstructions) ProtoMessage() {}

func (x *DetachedInstructions) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachedInstructions.ProtoReflect.Descriptor instead.
func (*DetachedInstructions) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{3}
}

func (x *DetachedInstructions) GetInstructions() []*EnvoyInstruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

type EnvoyInstructionReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnvoyInstructionReady) Reset() {
	*x = EnvoyInstructionReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstructionReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstructionReady) ProtoMessage() {}

func (x *EnvoyInstructionReady) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstructionReady.ProtoReflect.Descriptor instead.
func (*EnvoyInstructionReady) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{4}
}

type EnvoyInstructionInstall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent    *Agent    `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Url      string    `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Checksum *Checksum `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// path to the agent's executable within the package
	Exe string `protobuf:"bytes,4,opt,name=exe,proto3" json:"exe,omitempty"`
}

func (x *EnvoyInstructionInstall) Reset() {
	*x = EnvoyInstructionInstall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstructionInstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstructionInstall) ProtoMessage() {}

func (x *EnvoyInstructionInstall) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstructionInstall.ProtoReflect.Descriptor instead.
func (*EnvoyInstructionInstall) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{5}
}

func (x *EnvoyInstructionInstall) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *EnvoyInstructionInstall) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EnvoyInstructionInstall) GetChecksum() *Checksum {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *EnvoyInstructionInstall) GetExe() string {
	if x != nil {
		return x.Exe
	}
	return ""
}

type Checksum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type  Checksum_Type `protobuf:"varint,2,opt,name=type,proto3,enum=Checksum_Type" json:"type,omitempty"`
}

func (x *Checksum) Reset() {
	*x = Checksum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checksum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checksum) ProtoMessage() {}

func (x *Checksum) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checksum.ProtoReflect.Descriptor instead.
func (*Checksum) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{6}
}

func (x *Checksum) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Checksum) GetType() Checksum_Type {
	if x != nil {
		return x.Type
	}
	return Checksum_SHA256
}

type EnvoyInstructionConfigure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentType  AgentType          `protobuf:"varint,1,opt,name=agentType,proto3,enum=AgentType" json:"agentType,omitempty"`
	Operations []*ConfigurationOp `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *EnvoyInstructionConfigure) Reset() {
	*x = EnvoyInstructionConfigure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstructionConfigure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstructionConfigure) ProtoMessage() {}

func (x *EnvoyInstructionConfigure) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstructionConfigure.ProtoReflect.Descriptor instead.
func (*EnvoyInstructionConfigure) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{7}
}

func (x *EnvoyInstructionConfigure) GetAgentType() AgentType {
	if x != nil {
		return x.AgentType
	}
	return AgentType_TELEGRAF
}

func (x *EnvoyInstructionConfigure) GetOperations() []*ConfigurationOp {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ConfigurationOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision string               `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Type     ConfigurationOp_Type `protobuf:"varint,3,opt,name=type,proto3,enum=ConfigurationOp_Type" json:"type,omitempty"`
	Content  string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// conveys extra labels/tags that should be associated with the generated measurements
	ExtraLabels map[string]string `protobuf:"bytes,5,rep,name=extraLabels,proto3" json:"extraLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// monitoring interval, in seconds, value of 0 means use default
	Interval int64 `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *ConfigurationOp) Reset() {
	*x = ConfigurationOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationOp) ProtoMessage() {}

func (x *ConfigurationOp) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationOp.ProtoReflect.Descriptor instead.
func (*ConfigurationOp) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigurationOp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigurationOp) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *ConfigurationOp) GetType() ConfigurationOp_Type {
	if x != nil {
		return x.Type
	}
	return ConfigurationOp_CREATE
}

func (x *ConfigurationOp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ConfigurationOp) GetExtraLabels() map[string]string {
	if x != nil {
		return x.ExtraLabels
	}
	return nil
}

func (x *ConfigurationOp) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

// mainly used to test the ambassador->envoy liveness of the channel, but could eventually
// contain the full set of instructions of ensure consistency
type EnvoyInstructionRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnvoyInstructionRefresh) Reset() {
	*x = EnvoyInstructionRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstructionRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstructionRefresh) ProtoMessage() {}

func (x *EnvoyInstructionRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstructionRefresh.ProtoReflect.Descriptor instead.
func (*EnvoyInstructionRefresh) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{9}
}

type KeepAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeepAliveRequest) Reset() {
	*x = KeepAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveRequest) ProtoMessage() {}

func (x *KeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveRequest.ProtoReflect.Descriptor instead.
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{10}
}

type KeepAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeepAliveResponse) Reset() {
	*x = KeepAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResponse) ProtoMessage() {}

func (x *KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveResponse.ProtoReflect.Descriptor instead.
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{11}
}

type LogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentType   AgentType `protobuf:"varint,1,opt,name=agentType,proto3,enum=AgentType" json:"agentType,omitempty"`
	JsonContent string    `protobuf:"bytes,2,opt,name=jsonContent,proto3" json:"jsonContent,omitempty"`
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{12}
}

func (x *LogEvent) GetAgentType() AgentType {
	if x != nil {
		return x.AgentType
	}
	return AgentType_TELEGRAF
}

func (x *LogEvent) GetJsonContent() string {
	if x != nil {
		return x.JsonContent
	}
	return ""
}

type PostLogEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostLogEventResponse) Reset() {
	*x = PostLogEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLogEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLogEventResponse) ProtoMessage() {}

func (x *PostLogEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLogEventResponse.ProtoReflect.Descriptor instead.
func (*PostLogEventResponse) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{13}
}

type PostedMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric *Metric `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
}

func (x *PostedMetric) Reset() {
	*x = PostedMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostedMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostedMetric) ProtoMessage() {}

func (x *PostedMetric) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostedMetric.ProtoReflect.Descriptor instead.
func (*PostedMetric) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{14}
}

func (x *PostedMetric) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Variant:
	//	*Metric_NameTagValue
	Variant isMetric_Variant `protobuf_oneof:"variant"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{15}
}

func (m *Metric) GetVariant() isMetric_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *Metric) GetNameTagValue() *NameTagValueMetric {
	if x, ok := x.GetVariant().(*Metric_NameTagValue); ok {
		return x.NameTagValue
	}
	return nil
}

type isMetric_Variant interface {
	isMetric_Variant()
}

type Metric_NameTagValue struct {
	NameTagValue *NameTagValueMetric `protobuf:"bytes,1,opt,name=nameTagValue,proto3,oneof"`
}

func (*Metric_NameTagValue) isMetric_Variant() {}

type NameTagValueMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// in milliseconds
	Timestamp int64              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Tags      map[string]string  `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Fvalues   map[string]float64 `protobuf:"bytes,4,rep,name=fvalues,proto3" json:"fvalues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Svalues   map[string]string  `protobuf:"bytes,5,rep,name=svalues,proto3" json:"svalues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ivalues   map[string]int64   `protobuf:"bytes,6,rep,name=ivalues,proto3" json:"ivalues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *NameTagValueMetric) Reset() {
	*x = NameTagValueMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameTagValueMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameTagValueMetric) ProtoMessage() {}

func (x *NameTagValueMetric) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameTagValueMetric.ProtoReflect.Descriptor instead.
func (*NameTagValueMetric) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{16}
}

func (x *NameTagValueMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameTagValueMetric) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NameTagValueMetric) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NameTagValueMetric) GetFvalues() map[string]float64 {
	if x != nil {
		return x.Fvalues
	}
	return nil
}

func (x *NameTagValueMetric) GetSvalues() map[string]string {
	if x != nil {
		return x.Svalues
	}
	return nil
}

func (x *NameTagValueMetric) GetIvalues() map[string]int64 {
	if x != nil {
		return x.Ivalues
	}
	return nil
}

type PostMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostMetricResponse) Reset() {
	*x = PostMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMetricResponse) ProtoMessage() {}

func (x *PostMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMetricResponse.ProtoReflect.Descriptor instead.
func (*PostMetricResponse) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{17}
}

type EnvoyInstructionTestMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string    `protobuf:"bytes,1,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	AgentType     AgentType `protobuf:"varint,2,opt,name=agentType,proto3,enum=AgentType" json:"agentType,omitempty"`
	Content       string    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// declares the maximum amount of time in seconds the test operation can run
	Timeout int64 `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *EnvoyInstructionTestMonitor) Reset() {
	*x = EnvoyInstructionTestMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyInstructionTestMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyInstructionTestMonitor) ProtoMessage() {}

func (x *EnvoyInstructionTestMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyInstructionTestMonitor.ProtoReflect.Descriptor instead.
func (*EnvoyInstructionTestMonitor) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{18}
}

func (x *EnvoyInstructionTestMonitor) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EnvoyInstructionTestMonitor) GetAgentType() AgentType {
	if x != nil {
		return x.AgentType
	}
	return AgentType_TELEGRAF
}

func (x *EnvoyInstructionTestMonitor) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EnvoyInstructionTestMonitor) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type TestMonitorResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string    `protobuf:"bytes,1,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	Errors        []string  `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Metrics       []*Metric `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *TestMonitorResults) Reset() {
	*x = TestMonitorResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMonitorResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMonitorResults) ProtoMessage() {}

func (x *TestMonitorResults) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMonitorResults.ProtoReflect.Descriptor instead.
func (*TestMonitorResults) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{19}
}

func (x *TestMonitorResults) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *TestMonitorResults) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *TestMonitorResults) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PostTestMonitorResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostTestMonitorResultsResponse) Reset() {
	*x = PostTestMonitorResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telemetry_edge_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTestMonitorResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTestMonitorResultsResponse) ProtoMessage() {}

func (x *PostTestMonitorResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_edge_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTestMonitorResultsResponse.ProtoReflect.Descriptor instead.
func (*PostTestMonitorResultsResponse) Descriptor() ([]byte, []int) {
	return file_telemetry_edge_proto_rawDescGZIP(), []int{20}
}

var File_telemetry_edge_proto protoreflect.FileDescriptor

var file_telemetry_edge_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2d, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x6f, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41, 0x0a, 0x05, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x02, 0x0a,
	0x10, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x07,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x6e, 0x76,
	0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0b, 0x74, 0x65, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x45, 0x6e, 0x76,
	0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4d, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x82,
	0x01, 0x0a, 0x17, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x78, 0x65, 0x22, 0x64, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x10, 0x01, 0x22, 0x77, 0x0a, 0x19, 0x45, 0x6e, 0x76,
	0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xcf, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0x3e, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x10, 0x02, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22,
	0x12, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x4e, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x48, 0x00,
	0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x9a, 0x04, 0x0a, 0x12, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x66, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x46, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x53, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x07, 0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x49, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a,
	0x0a, 0x0c, 0x53, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x01, 0x0a,
	0x1b, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x75, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x50, 0x6f, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x41, 0x0a, 0x09, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52,
	0x41, 0x46, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4c, 0x45, 0x42, 0x45, 0x41, 0x54,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x53, 0x10, 0x03, 0x32, 0xba, 0x02, 0x0a,
	0x13, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x41, 0x6d, 0x62, 0x61, 0x73, 0x73,
	0x61, 0x64, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x45, 0x6e,
	0x76, 0x6f, 0x79, 0x12, 0x0d, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x1a, 0x11, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x11, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x0d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x1a, 0x13, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x13, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x1f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x0a, 0x1c, 0x63, 0x6f, 0x6d,
	0x2e, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x73, 0x61, 0x6c, 0x75, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5a, 0x10, 0x2e, 0x3b, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_telemetry_edge_proto_rawDescOnce sync.Once
	file_telemetry_edge_proto_rawDescData = file_telemetry_edge_proto_rawDesc
)

func file_telemetry_edge_proto_rawDescGZIP() []byte {
	file_telemetry_edge_proto_rawDescOnce.Do(func() {
		file_telemetry_edge_proto_rawDescData = protoimpl.X.CompressGZIP(file_telemetry_edge_proto_rawDescData)
	})
	return file_telemetry_edge_proto_rawDescData
}

var file_telemetry_edge_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_telemetry_edge_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_telemetry_edge_proto_goTypes = []interface{}{
	(AgentType)(0),                         // 0: AgentType
	(Checksum_Type)(0),                     // 1: Checksum.Type
	(ConfigurationOp_Type)(0),              // 2: ConfigurationOp.Type
	(*EnvoySummary)(nil),                   // 3: EnvoySummary
	(*Agent)(nil),                          // 4: Agent
	(*EnvoyInstruction)(nil),               // 5: EnvoyInstruction
	(*DetachedInstructions)(nil),           // 6: DetachedInstructions
	(*EnvoyInstructionReady)(nil),          // 7: EnvoyInstructionReady
	(*EnvoyInstructionInstall)(nil),        // 8: EnvoyInstructionInstall
	(*Checksum)(nil),                       // 9: Checksum
	(*EnvoyInstructionConfigure)(nil),      // 10: EnvoyInstructionConfigure
	(*ConfigurationOp)(nil),                // 11: ConfigurationOp
	(*EnvoyInstructionRefresh)(nil),        // 12: EnvoyInstructionRefresh
	(*KeepAliveRequest)(nil),               // 13: KeepAliveRequest
	(*KeepAliveResponse)(nil),              // 14: KeepAliveResponse
	(*LogEvent)(nil),                       // 15: LogEvent
	(*PostLogEventResponse)(nil),           // 16: PostLogEventResponse
	(*PostedMetric)(nil),                   // 17: PostedMetric
	(*Metric)(nil),                         // 18: Metric
	(*NameTagValueMetric)(nil),             // 19: NameTagValueMetric
	(*PostMetricResponse)(nil),             // 20: PostMetricResponse
	(*EnvoyInstructionTestMonitor)(nil),    // 21: EnvoyInstructionTestMonitor
	(*TestMonitorResults)(nil),             // 22: TestMonitorResults
	(*PostTestMonitorResultsResponse)(nil), // 23: PostTestMonitorResultsResponse
	nil,                                    // 24: EnvoySummary.LabelsEntry
	nil,                                    // 25: ConfigurationOp.ExtraLabelsEntry
	nil,                                    // 26: NameTagValueMetric.TagsEntry
	nil,                                    // 27: NameTagValueMetric.FvaluesEntry
	nil,                                    // 28: NameTagValueMetric.SvaluesEntry
	nil,                                    // 29: NameTagValueMetric.IvaluesEntry
}
var file_telemetry_edge_proto_depIdxs = []int32{
	0,  // 0: EnvoySummary.supportedAgents:type_name -> AgentType
	24, // 1: EnvoySummary.labels:type_name -> EnvoySummary.LabelsEntry
	0,  // 2: Agent.type:type_name -> AgentType
	8,  // 3: EnvoyInstruction.install:type_name -> EnvoyInstructionInstall
	10, // 4: EnvoyInstruction.configure:type_name -> EnvoyInstructionConfigure
	12, // 5: EnvoyInstruction.refresh:type_name -> EnvoyInstructionRefresh
	21, // 6: EnvoyInstruction.testMonitor:type_name -> EnvoyInstructionTestMonitor
	7,  // 7: EnvoyInstruction.ready:type_name -> EnvoyInstructionReady
	5,  // 8: DetachedInstructions.instructions:type_name -> EnvoyInstruction
	4,  // 9: EnvoyInstructionInstall.agent:type_name -> Agent
	9,  // 10: EnvoyInstructionInstall.checksum:type_name -> Checksum
	1,  // 11: Checksum.type:type_name -> Checksum.Type
	0,  // 12: EnvoyInstructionConfigure.agentType:type_name -> AgentType
	11, // 13: EnvoyInstructionConfigure.operations:type_name -> ConfigurationOp
	2,  // 14: ConfigurationOp.type:type_name -> ConfigurationOp.Type
	25, // 15: ConfigurationOp.extraLabels:type_name -> ConfigurationOp.ExtraLabelsEntry
	0,  // 16: LogEvent.agentType:type_name -> AgentType
	18, // 17: PostedMetric.metric:type_name -> Metric
	19, // 18: Metric.nameTagValue:type_name -> NameTagValueMetric
	26, // 19: NameTagValueMetric.tags:type_name -> NameTagValueMetric.TagsEntry
	27, // 20: NameTagValueMetric.fvalues:type_name -> NameTagValueMetric.FvaluesEntry
	28, // 21: NameTagValueMetric.svalues:type_name -> NameTagValueMetric.SvaluesEntry
	29, // 22: NameTagValueMetric.ivalues:type_name -> NameTagValueMetric.IvaluesEntry
	0,  // 23: EnvoyInstructionTestMonitor.agentType:type_name -> AgentType
	18, // 24: TestMonitorResults.metrics:type_name -> Metric
	3,  // 25: TelemetryAmbassador.AttachEnvoy:input_type -> EnvoySummary
	13, // 26: TelemetryAmbassador.KeepAlive:input_type -> KeepAliveRequest
	15, // 27: TelemetryAmbassador.PostLogEvent:input_type -> LogEvent
	17, // 28: TelemetryAmbassador.PostMetric:input_type -> PostedMetric
	22, // 29: TelemetryAmbassador.PostTestMonitorResults:input_type -> TestMonitorResults
	5,  // 30: TelemetryAmbassador.AttachEnvoy:output_type -> EnvoyInstruction
	14, // 31: TelemetryAmbassador.KeepAlive:output_type -> KeepAliveResponse
	16, // 32: TelemetryAmbassador.PostLogEvent:output_type -> PostLogEventResponse
	20, // 33: TelemetryAmbassador.PostMetric:output_type -> PostMetricResponse
	23, // 34: TelemetryAmbassador.PostTestMonitorResults:output_type -> PostTestMonitorResultsResponse
	30, // [30:35] is the sub-list for method output_type
	25, // [25:30] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_telemetry_edge_proto_init() }
func file_telemetry_edge_proto_init() {
	if File_telemetry_edge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_telemetry_edge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoySummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachedInstructions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstructionReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstructionInstall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checksum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstructionConfigure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstructionRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLogEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostedMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameTagValueMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyInstructionTestMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestMonitorResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telemetry_edge_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTestMonitorResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_telemetry_edge_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EnvoyInstruction_Install)(nil),
		(*EnvoyInstruction_Configure)(nil),
		(*EnvoyInstruction_Refresh)(nil),
		(*EnvoyInstruction_TestMonitor)(nil),
		(*EnvoyInstruction_Ready)(nil),
	}
	file_telemetry_edge_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Metric_NameTagValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_telemetry_edge_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_telemetry_edge_proto_goTypes,
		DependencyIndexes: file_telemetry_edge_proto_depIdxs,
		EnumInfos:         file_telemetry_edge_proto_enumTypes,
		MessageInfos:      file_telemetry_edge_proto_msgTypes,
	}.Build()
	File_telemetry_edge_proto = out.File
	file_telemetry_edge_proto_rawDesc = nil
	file_telemetry_edge_proto_goTypes = nil
	file_telemetry_edge_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TelemetryAmbassadorClient is the client API for TelemetryAmbassador service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TelemetryAmbassadorClient interface {
	AttachEnvoy(ctx context.Context, in *EnvoySummary, opts ...grpc.CallOption) (TelemetryAmbassador_AttachEnvoyClient, error)
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
	PostLogEvent(ctx context.Context, in *LogEvent, opts ...grpc.CallOption) (*PostLogEventResponse, error)
	PostMetric(ctx context.Context, in *PostedMetric, opts ...grpc.CallOption) (*PostMetricResponse, error)
	PostTestMonitorResults(ctx context.Context, in *TestMonitorResults, opts ...grpc.CallOption) (*PostTestMonitorResultsResponse, error)
}

type telemetryAmbassadorClient struct {
	cc grpc.ClientConnInterface
}

func NewTelemetryAmbassadorClient(cc grpc.ClientConnInterface) TelemetryAmbassadorClient {
	return &telemetryAmbassadorClient{cc}
}

func (c *telemetryAmbassadorClient) AttachEnvoy(ctx context.Context, in *EnvoySummary, opts ...grpc.CallOption) (TelemetryAmbassador_AttachEnvoyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TelemetryAmbassador_serviceDesc.Streams[0], "/TelemetryAmbassador/AttachEnvoy", opts...)
	if err != nil {
		return nil, err
	}
	x := &telemetryAmbassadorAttachEnvoyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TelemetryAmbassador_AttachEnvoyClient interface {
	Recv() (*EnvoyInstruction, error)
	grpc.ClientStream
}

type telemetryAmbassadorAttachEnvoyClient struct {
	grpc.ClientStream
}

func (x *telemetryAmbassadorAttachEnvoyClient) Recv() (*EnvoyInstruction, error) {
	m := new(EnvoyInstruction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *telemetryAmbassadorClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := c.cc.Invoke(ctx, "/TelemetryAmbassador/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryAmbassadorClient) PostLogEvent(ctx context.Context, in *LogEvent, opts ...grpc.CallOption) (*PostLogEventResponse, error) {
	out := new(PostLogEventResponse)
	err := c.cc.Invoke(ctx, "/TelemetryAmbassador/PostLogEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryAmbassadorClient) PostMetric(ctx context.Context, in *PostedMetric, opts ...grpc.CallOption) (*PostMetricResponse, error) {
	out := new(PostMetricResponse)
	err := c.cc.Invoke(ctx, "/TelemetryAmbassador/PostMetric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryAmbassadorClient) PostTestMonitorResults(ctx context.Context, in *TestMonitorResults, opts ...grpc.CallOption) (*PostTestMonitorResultsResponse, error) {
	out := new(PostTestMonitorResultsResponse)
	err := c.cc.Invoke(ctx, "/TelemetryAmbassador/PostTestMonitorResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TelemetryAmbassadorServer is the server API for TelemetryAmbassador service.
type TelemetryAmbassadorServer interface {
	AttachEnvoy(*EnvoySummary, TelemetryAmbassador_AttachEnvoyServer) error
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
	PostLogEvent(context.Context, *LogEvent) (*PostLogEventResponse, error)
	PostMetric(context.Context, *PostedMetric) (*PostMetricResponse, error)
	PostTestMonitorResults(context.Context, *TestMonitorResults) (*PostTestMonitorResultsResponse, error)
}

// UnimplementedTelemetryAmbassadorServer can be embedded to have forward compatible implementations.
type UnimplementedTelemetryAmbassadorServer struct {
}

func (*UnimplementedTelemetryAmbassadorServer) AttachEnvoy(*EnvoySummary, TelemetryAmbassador_AttachEnvoyServer) error {
	return status.Errorf(codes.Unimplemented, "method AttachEnvoy not implemented")
}
func (*UnimplementedTelemetryAmbassadorServer) KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedTelemetryAmbassadorServer) PostLogEvent(context.Context, *LogEvent) (*PostLogEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostLogEvent not implemented")
}
func (*UnimplementedTelemetryAmbassadorServer) PostMetric(context.Context, *PostedMetric) (*PostMetricResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMetric not implemented")
}
func (*UnimplementedTelemetryAmbassadorServer) PostTestMonitorResults(context.Context, *TestMonitorResults) (*PostTestMonitorResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTestMonitorResults not implemented")
}

func RegisterTelemetryAmbassadorServer(s *grpc.Server, srv TelemetryAmbassadorServer) {
	s.RegisterService(&_TelemetryAmbassador_serviceDesc, srv)
}

func _TelemetryAmbassador_AttachEnvoy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EnvoySummary)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TelemetryAmbassadorServer).AttachEnvoy(m, &telemetryAmbassadorAttachEnvoyServer{stream})
}

type TelemetryAmbassador_AttachEnvoyServer interface {
	Send(*EnvoyInstruction) error
	grpc.ServerStream
}

type telemetryAmbassadorAttachEnvoyServer struct {
	grpc.ServerStream
}

func (x *telemetryAmbassadorAttachEnvoyServer) Send(m *EnvoyInstruction) error {
	return x.ServerStream.SendMsg(m)
}

func _TelemetryAmbassador_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryAmbassador_PostLogEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).PostLogEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/PostLogEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).PostLogEvent(ctx, req.(*LogEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryAmbassador_PostMetric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostedMetric)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).PostMetric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/PostMetric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).PostMetric(ctx, req.(*PostedMetric))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryAmbassador_PostTestMonitorResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestMonitorResults)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).PostTestMonitorResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/PostTestMonitorResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).PostTestMonitorResults(ctx, req.(*TestMonitorResults))
	}
	return interceptor(ctx, in, info, handler)
}

var _TelemetryAmbassador_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TelemetryAmbassador",
	HandlerType: (*TelemetryAmbassadorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KeepAlive",
			Handler:    _TelemetryAmbassador_KeepAlive_Handler,
		},
		{
			MethodName: "PostLogEvent",
			Handler:    _TelemetryAmbassador_PostLogEvent_Handler,
		},
		{
			MethodName: "PostMetric",
			Handler:    _TelemetryAmbassador_PostMetric_Handler,
		},
		{
			MethodName: "PostTestMonitorResults",
			Handler:    _TelemetryAmbassador_PostTestMonitorResults_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttachEnvoy",
			Handler:       _TelemetryAmbassador_AttachEnvoy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "telemetry-edge.proto",
}
